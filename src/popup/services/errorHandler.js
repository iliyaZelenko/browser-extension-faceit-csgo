/**
 * –ï–¥–∏–Ω—ã–π —Å–µ—Ä–≤–∏—Å –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫
 */
class ErrorHandler {
  constructor () {
    this.notificationDefaults = {
      type: 'basic',
      iconUrl: (typeof chrome !== 'undefined' && chrome.runtime && chrome.runtime.getURL)
        ? chrome.runtime.getURL('icons/icon_48.png')
        : '/icons/icon_48.png'
    }
  }

  /**
     * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ—à–∏–±–∫–∏ API
     * @param {Error} error - –û–±—ä–µ–∫—Ç –æ—à–∏–±–∫–∏
     * @param {Object} context - –ö–æ–Ω—Ç–µ–∫—Å—Ç –æ—à–∏–±–∫–∏
     */
  handleApiError (error, context = {}) {
    console.error('API Error:', error, context)

    if (error.message.includes('404')) {
      this.showNotification({
        title: context.notFoundTitle || 'Not Found',
        message: context.notFoundMessage || 'The requested resource was not found.'
      })
    } else if (error.message.includes('403')) {
      this.showNotification({
        title: 'Access Denied',
        message: 'You do not have permission to access this resource.'
      })
    } else if (error.message.includes('500')) {
      this.showNotification({
        title: 'Server Error',
        message: 'Internal server error. Please try again later.'
      })
    } else if (error.message.includes('network') || error.message.includes('fetch')) {
      this.showNotification({
        title: 'Connection Error',
        message: 'Please check your internet connection and try again.'
      })
    } else {
      this.showNotification({
        title: context.genericTitle || 'Error',
        message: context.genericMessage || 'An unexpected error occurred.'
      })
    }
  }

  /**
     * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ—à–∏–±–∫–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏
     * @param {string} field - –ü–æ–ª–µ —Å –æ—à–∏–±–∫–æ–π
     * @param {string} message - –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
     */
  handleValidationError (field, message) {
    console.warn('Validation Error:', field, message)

    this.showNotification({
      title: 'Validation Error',
      message: message
    })
  }

  /**
     * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ—à–∏–±–∫–∏ –∏–≥—Ä–æ–∫–∞
     * @param {Error} error - –û–±—ä–µ–∫—Ç –æ—à–∏–±–∫–∏
     * @param {string} nickname - –ù–∏–∫–Ω–µ–π–º –∏–≥—Ä–æ–∫–∞
     */
  handlePlayerError (error, nickname = '') {
    if (error.message.includes('404')) {
      this.showNotification({
        title: 'Player not found',
        message: nickname ? `Player "${nickname}" not found.` : 'Player not found.'
      })
    } else if (error.message.includes('Nickname must be at least')) {
      this.showNotification({
        title: 'Invalid nickname',
        message: 'Nickname must be at least 3 characters.'
      })
    } else {
      this.handleApiError(error, {
        notFoundTitle: 'Player Error',
        notFoundMessage: 'Unable to load player data.'
      })
    }
  }

  /**
     * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ—à–∏–±–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
     * @param {Error} error - –û–±—ä–µ–∫—Ç –æ—à–∏–±–∫–∏
     */
  handleStatsError (error) {
    if (error.message.includes('404')) {
      this.showNotification({
        title: 'Stats not found',
        message: 'Player statistics not found for this game.'
      })
    } else {
      this.handleApiError(error, {
        genericTitle: 'Stats Error',
        genericMessage: 'Unable to load player statistics.'
      })
    }
  }

  /**
     * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ—à–∏–±–∫–∏ –º–∞—Ç—á–µ–π
     * @param {Error} error - –û–±—ä–µ–∫—Ç –æ—à–∏–±–∫–∏
     */
  handleMatchesError (error) {
    console.error('Matches Error:', error)

    this.showNotification({
      title: 'Matches Error',
      message: 'Unable to load match history.'
    })
  }

  /**
     * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
     * @param {Object} options - –û–ø—Ü–∏–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
     */
  showNotification (options) {
    const notification = {
      ...this.notificationDefaults,
      ...options
    }

    // –î–ª—è browser extension
    if (typeof browser !== 'undefined' && browser.notifications) {
      browser.notifications.create(notification)
    }
    // –î–ª—è Chrome extension
    else if (typeof chrome !== 'undefined' && chrome.notifications) {
      chrome.notifications.create(notification)
    }
    // Fallback –¥–ª—è web
    else if ('Notification' in window) {
      new Notification(notification.title, {
        body: notification.message,
        icon: notification.iconUrl
      })
    }
    // –ö–æ–Ω—Å–æ–ª—å –∫–∞–∫ –ø–æ—Å–ª–µ–¥–Ω–∏–π fallback
    else {
      console.error(`${notification.title}: ${notification.message}`)
    }
  }

  /**
     * –õ–æ–≥–∏—Ä—É–µ—Ç –æ—à–∏–±–∫—É –¥–ª—è –¥–µ–±–∞–≥–∞
     * @param {Error} error - –û–±—ä–µ–∫—Ç –æ—à–∏–±–∫–∏
     * @param {Object} context - –ö–æ–Ω—Ç–µ–∫—Å—Ç –æ—à–∏–±–∫–∏
     */
  logError (error, context = {}) {
    console.group('üî• Error Details')
    console.error('Error:', error)
    console.error('Message:', error.message)
    console.error('Stack:', error.stack)
    console.error('Context:', context)
    console.groupEnd()
  }
}

// –°–æ–∑–¥–∞–µ–º –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä
export const errorHandler = new ErrorHandler()

export default errorHandler
